package com.djeno.lab1.services;

import com.djeno.lab1.persistence.DTO.statistics.StatisticsDto;
import com.itextpdf.text.*;
import com.itextpdf.text.pdf.PdfWriter;
import org.springframework.stereotype.Service;

import java.io.FileOutputStream;
import java.time.LocalDateTime;

@Service
public class PdfReportService {

    public void generateReport(StatisticsDto stats, String filePath) {
        try {
            Document document = new Document(PageSize.A4);
            PdfWriter.getInstance(document, new FileOutputStream(filePath));
            document.open();

            document.add(new Paragraph("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´", FontFactory.getFont(FontFactory.HELVETICA_BOLD, 18)));
            document.add(new Paragraph("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ: " + LocalDateTime.now()));
            document.add(Chunk.NEWLINE);

            document.add(new Paragraph("–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π: " + stats.getTotalApps()));
            document.add(new Paragraph("–ù–æ–≤—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∑–∞ —Å—É—Ç–∫–∏: " + stats.getNewAppsLastDay()));
            document.add(Chunk.NEWLINE);

            document.add(new Paragraph("–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫—É–ø–æ–∫: " + stats.getTotalPurchases()));
            document.add(new Paragraph("–û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞: " + stats.getTotalRevenue() + " ‚ÇΩ"));
            document.add(new Paragraph("–ù–æ–≤—ã—Ö –ø–æ–∫—É–ø–æ–∫ –∑–∞ —Å—É—Ç–∫–∏: " + stats.getNewPurchasesLastDay()));
            document.add(Chunk.NEWLINE);

            document.add(new Paragraph("–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: " + stats.getTotalUsers()));
            document.add(new Paragraph("–ù–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ —Å—É—Ç–∫–∏: " + stats.getNewUsersLastDay()));
            document.add(Chunk.NEWLINE);

            document.add(new Paragraph("–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∑—ã–≤–æ–≤: " + stats.getTotalReviews()));
            document.add(new Paragraph("–°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥: " + stats.getAverageRating()));
            document.add(new Paragraph("–ù–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –∑–∞ —Å—É—Ç–∫–∏: " + stats.getNewReviewsLastDay()));
            document.add(Chunk.NEWLINE);

            document.add(new Paragraph("–¢–æ–ø-5 –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –ø–æ –∑–∞–≥—Ä—É–∑–∫–∞–º:"));
            for (StatisticsDto.AppSummary app : stats.getTopAppsByDownloads()) {
                document.add(new Paragraph(" - " + app.getName() + " (" + app.getDownloads() + " –∑–∞–≥—Ä—É–∑–æ–∫)"));
            }
            document.add(Chunk.NEWLINE);

            document.add(new Paragraph("–¢–æ–ø-5 –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É:"));
            for (StatisticsDto.AppSummary app : stats.getTopAppsByRating()) {
                document.add(new Paragraph(" - " + app.getName() + " (" + app.getRating() + "‚≠ê)"));
            }
            document.add(Chunk.NEWLINE);

            document.add(new Paragraph("–¢–æ–ø-5 –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –ø–æ –≤—ã—Ä—É—á–∫–µ:"));
            for (StatisticsDto.AppSummary app : stats.getTopAppsByRevenue()) {
                document.add(new Paragraph(" - " + app.getName() + " (" + app.getRevenue() + " ‚ÇΩ)"));
            }
            document.add(Chunk.NEWLINE);

            document.add(new Paragraph("–¢–æ–ø-5 –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π:"));
            for (StatisticsDto.UserSummary user : stats.getTopBuyers()) {
                document.add(new Paragraph(" - " + user.getUsername() + " (" + user.getPurchasesCount() + " –ø–æ–∫—É–ø–æ–∫)"));
            }
            document.add(Chunk.NEWLINE);

            document.add(new Paragraph("–¢–æ–ø-5 –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –ø–æ –æ—Ç–∑—ã–≤–∞–º:"));
            for (StatisticsDto.AppSummary app : stats.getTopAppsByReviews()) {
                document.add(new Paragraph(" - " + app.getName() + " (" + app.getReviews() + " –æ—Ç–∑—ã–≤–æ–≤)"));
            }

            document.close();
        } catch (Exception e) {
            throw new RuntimeException("–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF: " + e.getMessage(), e);
        }
    }
}

